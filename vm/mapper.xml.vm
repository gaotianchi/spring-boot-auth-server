    ##引入mybatis支持
        $!{mybatisSupport.vm}

        #set($tableName = $tool.append($tableInfo.name, "BaseDao"))
        #set($E = $!{tableInfo.name})
        #set($e = $!tool.firstLowerCase($!{tableInfo.name}))

        ##设置保存名称与保存位置
        $!callback.setFileName($tool.append($tableName, ".xml"))
        $!callback.setSavePath($tool.append($modulePath, "/src/main/resources/mapper/base"))

        ##拿到主键
        #if(!$tableInfo.pkColumn.isEmpty())
            #set($pk = $tableInfo.pkColumn.get(0))
        #end

    <?xml version="1.0" encoding="UTF-8"?>
    <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    <mapper namespace="$!{tableInfo.savePackageName}.dao.$!{tableName}">

        <resultMap type="$!{tableInfo.savePackageName}.entity.$!{E}" id="$!{E}Map">
            #foreach($column in $tableInfo.fullColumn)
                <result property="$!column.name" column="$!column.obj.name" jdbcType="$!column.ext.jdbcType"/>
            #end
        </resultMap>

        <insert id="insert$!{E}" keyProperty="$!pk.name" useGeneratedKeys="true">
            INSERT INTO $!{tableInfo.obj.name}(#foreach($column in $tableInfo.otherColumn)$!column.obj.name#if($foreach.hasNext), #end#end)
                VALUES
            (#foreach($column in $tableInfo.otherColumn)#{$!{column.name}}#if($foreach.hasNext), #end#end)
        </insert>

        <insert id="insert$!{E}sBatch" keyProperty="$!pk.name" useGeneratedKeys="true">
            INSERT INTO $!{tableInfo.obj.name}
            (#foreach($column in $tableInfo.otherColumn)$!column.obj.name#if($foreach.hasNext), #end#end)
            VALUES
            <foreach collection="entities" item="entity" separator=",">
                (#foreach($column in $tableInfo.otherColumn)#{entity.$!{column.name}}#if($foreach.hasNext), #end#end)
            </foreach>
        </insert>

        <delete id="delete$!{E}ById">
            DELETE
            FROM $!{tableInfo.obj.name} WHERE $!pk.obj.name = #{$!pk.name}
        </delete>

        <delete id="delete$!{E}sBatchByIds">
            DELETE
            FROM $!{tableInfo.obj.name}
            WHERE $!pk.obj.name IN
            <foreach collection="ids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </delete>

        <update id="update$!{E}ById">
            UPDATE $!{tableInfo.obj.name}
            <set>
                #foreach($column in $tableInfo.otherColumn)
                    <if test="$!column.name != null#if($column.type.equals(
                        "java.lang.String")) and $!column.name != ''#end">
                        $!column.obj.name = #{$!column.name},
                    </if>
                #end
            </set>
            WHERE $!pk.obj.name = #{$!pk.name}
        </update>

        <insert id="insertOrUpdate$!{E}sBatch" keyProperty="$!pk.name" useGeneratedKeys="true">
            INSERT INTO $!{tableInfo.obj.name}
            (#foreach($column in $tableInfo.otherColumn)$!column.obj.name#if($foreach.hasNext), #end#end)
            VALUES
            <foreach collection="entities" item="entity" separator=",">
                (#foreach($column in $tableInfo.otherColumn)#{entity.$!{column.name}}#if($foreach.hasNext), #end#end)
            </foreach>
            ON DUPLICATE KEY UPDATE
            #foreach($column in $tableInfo.otherColumn)$!column.obj.name = VALUES($!column.obj.name)
                #if($foreach.hasNext),#end
            #end
        </insert>

        <select id="select$!{E}ById" resultMap="$!{E}Map">
            SELECT
                #allSqlColumn()

            FROM $!tableInfo.obj.name
                WHERE $!pk.obj.name = #{$!pk.name}
        </select>

        <select id="select$!{E}sCount" resultType="java.lang.Long">
            SELECT count(1)
            FROM $!tableInfo.obj.name
            <where>
                #foreach($column in $tableInfo.fullColumn)
                    <if test="$!column.name != null#if($column.type.equals(
                        "java.lang.String")) and $!column.name != ''#end">
                        and $!column.obj.name = #{$!column.name}
                    </if>
                #end
            </where>
        </select>

        <select id="select$!{E}sByPage" resultMap="$!{E}Map">
            SELECT
            #allSqlColumn()

            FROM $!tableInfo.obj.name
            <where>
                #foreach($column in $tableInfo.fullColumn)
                    <if test="$!column.name != null#if($column.type.equals(
                        "java.lang.String")) and $!column.name != ''#end">
                        and $!column.obj.name = #{$!column.name}
                    </if>
                #end
            </where>
            limit #{pageable.offset}, #{pageable.pageSize}
        </select>
    </mapper>
