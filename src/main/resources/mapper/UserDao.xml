<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gaotianchi.auth.dao.UserDao">

    <resultMap type="com.gaotianchi.auth.infrastructure.entity.User" id="UserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="createdAt" column="created_at" jdbcType="TIMESTAMP"/>
        <result property="updatedAt" column="updated_at" jdbcType="TIMESTAMP"/>
        <result property="lastLoginTime" column="last_login_time" jdbcType="TIMESTAMP"/>
        <result property="lastLoginIp" column="last_login_ip" jdbcType="VARCHAR"/>
        <result property="failedAttempts" column="failed_attempts" jdbcType="INTEGER"/>
        <result property="isLocked" column="is_locked" jdbcType="INTEGER"/>
        <result property="lockExpiration" column="lock_expiration" jdbcType="TIMESTAMP"/>
        <result property="isEnabled" column="is_enabled" jdbcType="INTEGER"/>
    </resultMap>

    <select id="selectByUsernameOrEmail" resultMap="UserMap">
        SELECT id,
               username,
               password,
               email,
               created_at,
               updated_at,
               last_login_time,
               last_login_ip,
               failed_attempts,
               is_locked,
               lock_expiration,
               is_enabled
        FROM user
        WHERE username = #{usernameOrEmail}
           OR email = #{usernameOrEmail}
    </select>

    <select id="selectUserRolesAndPermissionsNamesByUsername" resultType="java.lang.String">
        WITH user_roles AS (SELECT r.name AS role_name,
                                   p.name AS permission_name
                            FROM user u
                                     INNER JOIN
                                 user_role ur ON u.id = ur.user_id
                                     INNER JOIN
                                 role r ON ur.role_code = r.code
                                     LEFT JOIN
                                 role_permission rp ON r.code = rp.role_code
                                     LEFT JOIN
                                 permission p ON rp.permission_code = p.code
                            WHERE u.username = #{username})
        SELECT DISTINCT CONCAT('ROLE_', role_name) AS name
        FROM user_roles

        UNION

        SELECT DISTINCT permission_name AS name
        FROM user_roles;
    </select>
</mapper>

